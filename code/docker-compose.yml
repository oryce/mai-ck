networks:
  internal:

volumes:
  pg_data:
  ollama_data:
  webui_data:

services:
  backend:
    build: backend
    restart: unless-stopped

    env_file: config/backend/.env

    ports:
      - 8000:80
    networks:
      - internal

    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: frontend
      args:
        API_BASE: http://backend
    restart: unless-stopped

    ports:
      - 3000:3000
    networks:
      - internal

  postgres:
    image: postgres
    restart: unless-stopped

    env_file: config/postgres/.env
    environment:
      - PGDATA=/var/lib/postgresql/data

    networks:
      - internal

    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./config/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped

    ports:
      - 11431:11431
    networks:
      - internal

    volumes:
      - ollama_data:/root/.ollama

    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'
      interval: 10s
      timeout: 10s
      retries: 5


  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped

    ports:
      - "9000:8080"
    networks:
      - internal

    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434

    volumes:
      - webui_data:/app/backend/data

    depends_on:
      ollama:
        condition: service_healthy
