networks:
  internal:

volumes:
  pg_data:
  ollama_data:
  webui_data:
  keycloak_data:
  redis_data:

services:
  backend:
    build: backend
    restart: unless-stopped

    env_file: config/backend/.env

    ports:
      - 8000:80
    networks:
      - internal

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_started

  frontend:
    build: frontend
    restart: unless-stopped

    ports:
      - 3000:3000
    networks:
      - internal

    depends_on:
      keycloak:
        condition: service_started

  postgres:
    image: postgres
    restart: unless-stopped

    env_file: config/postgres/.env

    environment:
      - PGDATA=/var/lib/postgresql/data

    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./config/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro

    networks:
      - internal
    ports:
      - 5432:5432

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: keycloak/keycloak
    restart: unless-stopped

    command: ["start", "--import-realm"]

    env_file: config/keycloak/.env

    networks:
      - internal
    ports:
      - "8080:8080"

    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./config/keycloak/realm.json:/opt/keycloak/data/import/hive.json:ro

    depends_on:
      postgres:
        condition: service_healthy

  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped

    ports:
      - 11431:11431
    networks:
      - internal

    volumes:
      - ollama_data:/root/.ollama

    healthcheck:
      test:
        - CMD-SHELL
        - bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'
      interval: 10s
      timeout: 10s
      retries: 5

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped

    ports:
      - "9000:8080"
    networks:
      - internal

    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434

    volumes:
      - webui_data:/app/backend/data

  redis:
    image: redis
    restart: unless-stopped

    command: ["redis-server", "--appendonly", "yes"]

    ports:
      - 6379:6379
    networks:
      - internal

    volumes:
      - redis_data:/data
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]